{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["getArticleURL","item","date","page","App","className","app","credentials","url","componentId","dataField","placeholder","autosuggest","showClearAll","title","from","size","pagination","pages","react","and","render","data","ResultListWrapper","map","extra","type","target","href","icon","ArrowRightOutlined","author","fname","lname","tags","x","_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"oXA0BA,SAASA,EAAcC,GACrB,MACE,wCACAA,EAAKC,KACL,aACAD,EAAKE,KAoFMC,MAhFf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,iDACA,4FAGF,qBAAKA,UAAU,aAAf,SACE,eAAC,IAAD,CAIEC,IAAI,gBACJC,YAAY,qBACZC,IAAI,sFANN,UAQE,cAAC,IAAD,CACEC,YAAY,iBACZC,UAAuC,OACvCC,YAAY,+BACZC,aAAa,IAGf,wBACA,cAAC,IAAD,CAAiBC,cAAc,IAC/B,cAAC,IAAD,CACEJ,YAAY,SACZK,MAAM,UACNJ,UAAU,QACVK,KAAM,EACNC,KAAM,EACNC,YAAY,EACZC,MAAO,EACPC,MAAO,CACLC,IAAK,CAAC,iBAAkB,kBAE1BC,OAAQ,gBAAGC,EAAH,EAAGA,KAAH,OACN,cAAC,IAAaC,kBAAd,UACGD,EAAKE,KAAI,SAACvB,GAAD,OACR,eAAC,IAAD,WACE,eAAC,IAAD,CACEa,MAAOb,EAAKa,MACZW,MACE,cAAC,IAAD,CAASX,MAAM,mBAAf,SACE,cAAC,IAAD,CACEY,KAAK,cACLC,OAAO,SACPC,KAAM5B,EAAcC,GACpB4B,KAAM,cAACC,EAAA,EAAD,QARd,UAaE,oBAAGzB,UAAU,YAAb,iBACOJ,EAAKC,KADZ,WAC0BD,EAAKE,QAG/B,oBAAGE,UAAU,cAAb,kBAjFI0B,EAkFoB9B,EAjFvB,SAAjB8B,EAAOC,MACY,SAAjBD,EAAOE,MACF,UAEAF,EAAOE,MAEU,SAAjBF,EAAOE,MACTF,EAAOC,MAEPD,EAAOC,MAAQ,GAAKD,EAAOE,UA2EhB,qBAAK5B,UAAU,YAAf,SACGJ,EAAKiC,KAAKV,KAAI,SAACW,GAAD,OACb,cAAC,IAAD,UAAcA,GAAJA,WAIhB,0BA5BelC,EAAKmC,KA/DxC,IAA0BL,mBCAXM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASzB,OACP,cAAC,IAAM0B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.95fa61c6.chunk.js","sourcesContent":["import {\n  DataSearch,\n  ReactiveBase,\n  ReactiveList,\n  ResultList,\n  SelectedFilters,\n} from \"@appbaseio/reactivesearch\";\nimport { Button, Card, Tag, Tooltip } from \"antd\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nfunction authorValidation(author) {\n  if (author.fname === \"null\") {\n    if (author.lname === \"null\") {\n      return \"unknown\";\n    } else {\n      return author.lname;\n    }\n  } else if (author.lname === \"null\") {\n    return author.fname;\n  } else {\n    return author.fname + \"\" + author.lname;\n  }\n}\n\nfunction getArticleURL(item) {\n  return (\n    \"https://digital.harding.edu/thebison/\" +\n    item.date +\n    \".pdf#page=\" +\n    item.page\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>The Bison Index</h1>\n        <p>The following is a search interface for the Bison Index.</p>\n      </header>\n\n      <div className=\"Search-Box\">\n        <ReactiveBase\n/*           app=\"elastic-seminar\"\n          credentials=\"fdc4cda1b1c6:d4766f28-ae9f-404a-8d84-80d90c2429ed\"\n          url=\"https://elastic-pedro-dvgexed-arc.searchbase.io\" */\n          app=\"elastic-bison\"\n          credentials=\"NavH:Pjnavh990223#\"\n          url=\"https://search-elastic-bison-4hu5udirnnvt7dya2ulgknduku.us-east-2.es.amazonaws.com/\"\n        >\n          <DataSearch\n            componentId=\"General Search\"\n            dataField={(\"title\", \"fname\", \"lname\", \"tags\")}\n            placeholder=\"Search for a Bison's Article\"\n            autosuggest={true}\n          />\n\n          <div></div>\n          <SelectedFilters showClearAll={true} />\n          <ReactiveList\n            componentId=\"result\"\n            title=\"Results\"\n            dataField=\"title\"\n            from={0}\n            size={5}\n            pagination={true}\n            pages={4}\n            react={{\n              and: [\"General Search\", \"ratingsfilter\"],\n            }}\n            render={({ data }) => (\n              <ReactiveList.ResultListWrapper>\n                {data.map((item) => (\n                  <ResultList key={item._id}>\n                    <Card\n                      title={item.title}\n                      extra={\n                        <Tooltip title=\"Read the article\">\n                          <Button\n                            type=\"circle link\"\n                            target=\"_blank\"\n                            href={getArticleURL(item)}\n                            icon={<ArrowRightOutlined />}\n                          ></Button>\n                        </Tooltip>\n                      }\n                    >\n                      <p className=\"card-date\">\n                        In: {item.date}, page: {item.page}\n                      </p>\n\n                      <p className=\"card-author\">\n                        By: {authorValidation(item)}\n                      </p>\n\n                      <div className=\"card-tags\">\n                        {item.tags.map((x) => (\n                          <Tag key={x}>{x}</Tag>\n                        ))}\n                      </div>\n                    </Card>\n                    <div></div>\n                  </ResultList>\n                ))}\n              </ReactiveList.ResultListWrapper>\n            )}\n          />\n        </ReactiveBase>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}